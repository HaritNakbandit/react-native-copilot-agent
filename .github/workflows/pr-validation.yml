name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop, release/* ]
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: TypeScript Check
        run: npx tsc --noEmit

      - name: Run Tests
        run: npm test

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate || true
          # Generate audit report
          npm audit --json > audit-report.json || true

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-report
          path: audit-report.json
          retention-days: 7
  summary:
    name: PR Validation Summary
    runs-on: ubuntu-latest
    needs: [code-quality, android-build, ios-build, security-scan]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "Code Quality: ${{ needs.code-quality.result }}"
          echo "Android Build: ${{ needs.android-build.result }}"
          echo "iOS Build: ${{ needs.ios-build.result }}"
          echo "Security Scan: ${{ needs.security-scan.result }}"
          
          if [[ "${{ needs.code-quality.result }}" == "failure" || "${{ needs.android-build.result }}" == "failure" || "${{ needs.ios-build.result }}" == "failure" ]]; then
            echo "❌ PR validation failed"
            exit 1
          else
            echo "✅ PR validation passed"
          fi
